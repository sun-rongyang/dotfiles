"
" Author: Rongyang Sun <sun-rongyang@outlook.com>
" Creation Date: 2018-05-12 09:39
" 
" Description: General vim configuration file for Linux.
"


"" Vundle configuration
set nocompatible              " required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
Plugin 'gmarik/Vundle.vim'

" Add all your plugins here (note older versions of Vundle used Bundle instead of Plugin)
Plugin 'altercation/vim-colors-solarized' "solarized scheme
Plugin 'tomasr/molokai' "molokai : A port of the monokai scheme for TextMate
Plugin 'vim-airline/vim-airline' "A lite vim powerline
Plugin 'vim-airline/vim-airline-themes' "airline themes

"" Coding
" General
Plugin 'nathanaelkane/vim-indent-guides' "A plugin for visually displaying indent levels in Vim. 
Plugin 'dyng/ctrlsf.vim' " combine ack search contents under whole project
Plugin 'SirVer/ultisnips' "snips engine
Plugin 'honza/vim-snippets' "snips plugin
Plugin 'ctrlpvim/ctrlp.vim' "Fuzzy file, buffer, mru, tag, etc finder. http://kien.github.com/ctrlp.vim
Plugin 'tacahiroy/ctrlp-funky'
Plugin 'tmhedberg/SimpylFold' "No-BS Python code folding for Vim
Plugin 'Valloric/YouCompleteMe' "A code-completion engine for Vim
Plugin 'Raimondi/delimitMate' "provides insert mode auto-completion for quotes, parens, brackets, etc.
Plugin 'Chiel92/vim-autoformat' "Provide easy code formatting in Vim
Plugin 'scrooloose/nerdcommenter' "Vim plugin for intensely orgasmic commenting
Plugin 'scrooloose/nerdtree' "A tree explorer plugin for vim 
Plugin 'terryma/vim-multiple-cursors' "True Sublime Text style multiple selections for Vim
Plugin 'richq/vim-cmake-completion' "Cmake completion
" All of your Plugins must be added before the following line
"-----------------------------------------------------
call vundle#end()            " required
filetype plugin indent on    " required


set nocompatible
"" About search
" Search along with type in
set incsearch
" Ignore case search
set ignorecase
" Close compatible mode
set nocompatible
" Turn on Ex mode complete feature
set wildmenu

" About display
" Color scheme
set background=dark
colorscheme molokai
set t_ut=   " For fix background color erase for 256-color tmux
" Turn off cursor blink
set gcr=a:block-blinkon0
" turn off wrap
set nowrap
" use utf-8
set encoding=utf-8
" 禁止显示滚动条
set guioptions-=l
set guioptions-=L
set guioptions-=r
set guioptions-=R
" 禁止显示菜单和工具条
set guioptions-=m
set guioptions-=T
" 总是显示状态栏
set laststatus=2
" 显示光标当前位置
set ruler
" 开启行号显示
set number
" 高亮显示当前行/列
set cursorline
set cursorcolumn
" 高亮显示搜索结果
set hlsearch
syntax on "语法高亮
" Highlight the 80th column 
set colorcolumn=80

"" About indent
filetype indent on " 自适应不同语言的智能缩进
" 将制表符扩展为空格
set expandtab
" 设置编辑时制表符占用空格数
set tabstop=2
" 设置格式化时制表符占用空格数
set shiftwidth=2
"让 vim 把连续数量的空格视为一个制表符
set softtabstop=2
" 修复 backspace 键
set backspace=2

"" About folding
"set foldmethod=indent
set foldmethod=syntax
set foldlevel=99
au BufWinLeave * silent mkview  " 保存文件的折叠状态
au BufRead * silent loadview    " 恢复文件的折叠状态
nnoremap <space> za             " 用空格来切换折叠状态
noremap <leader><space> zM     " fold all level

"" About spell check
" set insert mode spell check
autocmd InsertEnter * setlocal spell
autocmd InsertLeave * setlocal nospell
" reset the spell check highlight, only for console mode
if has("gui_running")
" do nothing, pass
else
    hi clear SpellBad
    hi SpellBad cterm=bold,italic ctermfg=red
endif
" check either English or Chinese/Japanese/Korean
set spelllang=en,cjk

"" About Leader key
" Define the Leader key
let mapleader=";"

"" Others configuration
" Use system's clipboard
set clipboard=unnamed
" Load different configuration file for different file type
filetype plugin on


" indent guides configuration
" 随 vim 自启动
let g:indent_guides_enable_on_vim_startup=1
" 从第二层开始可视化显示缩进
let g:indent_guides_start_level=2
" 色块宽度
let g:indent_guides_guide_size=1
" 快捷键 i 开/关缩进可视化
:nmap <silent> <Leader>i <Plug>IndentGuidesToggle

" air-line configuration
set t_Co=256
let g:airline_theme="simple" 
let g:airline_powerline_fonts = 1
" 开启tabline
let g:airline#extensions#tabline#enabled = 1
" tabline中当前buffer两端的分隔字符
let g:airline#extensions#tabline#left_sep = ' ' 
" tabline中未激活buffer两端的分隔字符
let g:airline#extensions#tabline#left_alt_sep = '|' 
"tabline中buffer显示编号
let g:airline#extensions#tabline#buffer_nr_show = 1
" 映射切换 buffer 的键位, 在 buffer 没有保存的情况下强制切换
nnoremap [b :bp!<CR>
nnoremap ]b :bn!<CR>

" SimplyFold config
let g:SimpylFold_docstring_preview = 1

" NERDTree config
map <leader>n :NERDTreeToggle<CR>
" vim-multiple-cursors configuration
let g:multi_cursor_next_key='<C-n>'
let g:multi_cursor_prev_key='<C-p>'
let g:multi_cursor_skip_key='<C-x>'
let g:multi_cursor_quit_key='<Esc>'

" Cmake completion config
set nocp

" better key bindings for UltiSnipsExpandTrigger
let g:UltiSnipsExpandTrigger = "<leader><tab>"
let g:UltiSnipsJumpForwardTrigger = "<leader><tab>"
let g:UltiSnipsJumpBackwardTrigger = "<leader><s-tab>"

" config for CtrlP
let g:ctrlp_custom_ignore = {
    \ 'dir':  '\v[\/]\.(git|hg|svn|rvm)$',
    \ 'file': '\v\.(exe|so|dll|zip|tar|tar.gz|pyc)$',
    \ }
let g:ctrlp_working_path_mode=0
let g:ctrlp_match_window_bottom=1
let g:ctrlp_max_height=15
let g:ctrlp_match_window_reversed=0
let g:ctrlp_mruf_max=500
let g:ctrlp_follow_symlinks=1
nnoremap <Leader>fu :CtrlPFunky<Cr>
" narrow the list down with a word under cursor
nnoremap <Leader>fU :execute 'CtrlPFunky ' . expand('<cword>')<Cr>
let g:ctrlp_funky_syntax_highlight = 1
let g:ctrlp_extensions = ['funky']

" content search in project
" search the word under the cursor. Reminder: search in project
nnoremap <Leader>sp :CtrlSF<CR>
" search the word form input. Reminder: search input
nnoremap <Leader>si :CtrlSF<Space>
let g:ctrlsf_default_root = "project+fw"
let g:ctrlsf_default_view_mode = 'compact'

" vim-fswitch
nmap <silent> <Leader>sw :FSHere<cr>
